{"id":768812754,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1659998145,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/768812754/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"57.4 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        ListNode priorNode = new ListNode(head.val);\n        ListNode curNode = head.next;\n        int counter = 1;\n        ListNode newNode = new ListNode();\n        while(curNode != null)\n        {\n            newNode = new ListNode(curNode.val, priorNode);\n            priorNode = newNode;\n            curNode = curNode.next;\n            counter++;\n        }\n        /*while(newNode!= null)\n        {\n            System.out.println(newNode.val);\n            newNode = newNode.next;\n        }*/\n        //System.out.println(input);\n       for(int i = 0; i < counter/2; i++)\n        {\n            if(head.val != newNode.val)\n              return(false);\n            head = head.next;\n            newNode = newNode.next;\n        }\n        return(true);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}