{"id":956767118,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1684974881,"status":10,"status_display":"Accepted","runtime":"288 ms","url":"/submissions/detail/956767118/","is_pending":"Not Pending","title":"Maximum Subsequence Score","memory":"89.2 MB","code":"class Solution {\npublic:\n    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {\n        int n = nums1.size();\n        vector<tuple<int, int, int>> allData (n, {0,0,0});\n        for(int i  = 0; i < n; i++)\n        {\n            int a = nums1[i];\n            int b =  nums2[i];\n            allData[i] = {b, a, i};\n        }\n\n        sort(allData.begin(), allData.end());\n        \n        long long max = -1;\n        int curNum2;\n        \n        priority_queue<int, vector<int>, greater<int>> pq;\n        long long sum = 0;\n        int capacity = 0;\n        int count = 0;\n        for(int i = n-1; i > n-k-1; i--)\n        {\n            pq.push(get<1>(allData[i]));\n            sum += get<1>(allData[i]);\n        }\n\n        max = sum * get<0>(allData[n-k]);        \n        for(int i = n-k-1; i >= 0; i--)\n        {\n            tuple<int, int, int> cur = allData[i];\n            curNum2 = get<0>(cur);\n            if (get<1>(cur) > pq.top())\n            {\n                sum -= pq.top(); \n                pq.pop();\n                pq.push(get<1>(cur));\n                sum += get<1>(cur);\n            }\n            if(i == 0 || get<0>(allData[i-1]) != curNum2)\n            {\n                //now we check\n                if(sum * curNum2 > max)\n                    max = sum * curNum2;\n            }\n        }\n        \n        return max;\n        //create tuples with cur k, min multi, best sum\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"maximum-subsequence-score","has_notes":false}