{"id":883323430,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1674425557,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/883323430/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"51.4 MB","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        int n = nums.length;\n        int[] preSum = new int[n+1];\n        for(int i = 1; i <= n; i++)\n            preSum[i] = preSum[i-1] + nums[i-1];\n        int[] minSum = new int[n+1];\n        int[] minSumIndex = new int[n+1];\n        for(int i = 1; i <= n; i++)\n        {\n            if(minSum[i-1] < preSum[i])\n            {\n                minSum[i] = minSum[i-1];\n                minSumIndex[i] = minSumIndex[i-1];\n            }\n            else\n            {\n                minSum[i] = preSum[i];\n                minSumIndex[i] = i;  //index after subarray with minIndex or something like that \n            }\n        }\n        int maxIndex = 0;\n        for(int i = 0; i <= n; i++)\n        {\n            if(preSum[i] - preSum[minSumIndex[i]] > preSum[maxIndex] - preSum[minSumIndex[maxIndex]])\n                maxIndex = i;\n        } \n        // System.out.println(Arrays.toString(preSum));\n        // System.out.println(Arrays.toString(minSumIndex));\n        // System.out.println(minSumIndex[maxIndex] + \" \" + maxIndex);\n        if(maxIndex == minSumIndex[maxIndex])\n        {\n            int max = nums[0];\n            for(int i = 1; i < n; i++)\n                max = Math.max(max, nums[i]);\n            return max;\n        }\n        return(preSum[maxIndex] - preSum[minSumIndex[maxIndex]]);    \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false}