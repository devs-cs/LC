{"id":883331941,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1674427076,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/883331941/","is_pending":"Not Pending","title":"Merge Intervals","memory":"46.1 MB","code":"class Solution {\n\n    class Pair\n    {\n        public int a, b ;\n        public Pair(int a, int b)\n        {\n            this.a = a;\n            this.b = b;\n        }\n        public String toString()\n        {\n           return(\"(\" + a + \", \" + b + \")\");\n        }\n    }\n    public int[][] merge(int[][] intervals) {\n        ArrayList<Pair> events = new ArrayList<Pair>();\n        ArrayList<Pair> solutions = new ArrayList<Pair>();\n        for(int i = 0; i < intervals.length; i++)\n        {\n            events.add(new Pair(intervals[i][0], 1));\n            events.add(new Pair(intervals[i][1], -1));\n        }\n        events.sort((p1, p2) -> (p1.a - p2.a != 0) ? p1.a - p2.a : p2.b - p1.b);\n        int start = -1;\n        int sum = 0;\n        for(int i = 0; i < events.size(); i++)\n        {\n            Pair event = events.get(i);\n            if (start == -1)\n                start = event.a;\n            sum+=event.b;\n            if(sum == 0)\n            {\n                solutions.add(new Pair(start, event.a));\n                start = -1;\n            }\n        }\n        int[][] sol = new int[solutions.size()][2];\n        for(int i = 0; i < sol.length; i++)\n        {\n            sol[i][0] = solutions.get(i).a;\n            sol[i][1] = solutions.get(i).b;\n        }\n        return sol;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false}