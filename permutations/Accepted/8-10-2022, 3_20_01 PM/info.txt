{"id":770579312,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1660170001,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/770579312/","is_pending":"Not Pending","title":"Permutations","memory":"44.6 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<Integer> remaining = new ArrayList<Integer>();\n         for(int num: nums)\n            remaining.add(num);\n        \n        recur(new ArrayList<Integer>(), remaining);\n        return(combinations);\n        }\n    \n    private List<List<Integer>> combinations = new ArrayList<List<Integer>>();\n    public void recur(List<Integer> temp, List<Integer> remaining)\n    {\n        //System.out.println(temp);\n        if(remaining.size() == 0)\n        {\n            List<Integer> submit = new ArrayList<Integer>();\n            for(int j = 0; j < temp.size(); j++)\n                submit.add(temp.get(j));\n            //System.out.println(temp);\n            combinations.add(submit);\n        }\n        else\n        {\n            for(int i = 0; i < remaining.size(); i++)\n            {\n            temp.add(remaining.remove(i));\n            recur(temp, remaining);\n            remaining.add(i, temp.remove(temp.size()-1)); \n            }\n        }\n        \n    }\n        \n \n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false}