{"id":882093807,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1674257076,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/882093807/","is_pending":"Not Pending","title":"Next Permutation","memory":"43 MB","code":"class Solution {\n    public void nextPermutation(int[] nums) { \n        if(nums.length == 1)\n        {\n           return;\n        }\n        int sml = nums.length -2;\n        while(sml >= 0 && nums[sml] >= nums[sml+1])\n            sml--;\n        if(sml == -1 && nums[0] >= nums[1])\n        {\n            Arrays.sort(nums);\n            return;\n        }\n        //now the new order is secondSmallest, smallest, other numbers\n        int sndSml;\n        for(sndSml = nums.length-1; sndSml >= 0 && nums[sndSml] <= nums[sml]; sndSml--);\n        int temp = nums[sml];\n        nums[sml] = nums[sndSml];\n        nums[sndSml] = temp;\n        Arrays.sort(nums, sml+1, nums.length);\n\n    }\n}\n\n\n/*\n 1 7 4  -    6 8 7 54  ,  \n\n\n\n\n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-permutation","has_notes":false}