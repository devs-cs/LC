{"id":960678495,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1685506406,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/960678495/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"6.1 MB","code":"class Solution {\npublic:\n    string getPermutation(int n, int k) {\n        vector<int> rem(n, 0);\n        for(int i = 0; i < n; i++)\n            rem[i] = i+1;\n        return perm(n, k, rem);\n        \n    }\n\n    string perm(int n, int k, vector<int> rem)\n    {\n        if(n == 1 && k == 1)\n        {\n            return to_string(rem[0]);\n        }\n        int firstInd = (k-1)/fac(n-1) ;// fac(n)/n (so amount of perms with each leading digit)\n        string val = to_string(rem[firstInd]);\n        rem.erase(rem.begin() + firstInd);\n        return val + perm(n-1, (k-1) % fac(n-1) + 1, rem);\n\n    }\n\n    int fac(int n)\n    {\n        if(n == 1 || n== 0)\n            return 1;\n        return n * fac(n-1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence","has_notes":false}