{"id":769724267,"lang":"java","lang_name":"Java","time":"10 months, 1 week","timestamp":1660083663,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/769724267/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"47.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode curNode = new ListNode();\n        ListNode pastNode = new ListNode();\n        ListNode firstNode = new ListNode();\n        boolean first = true;\n        int car = 0;\n        while(l1 != null || l2!=null)\n        {\n            \n            if(l1 == null)\n                l1 = new ListNode(0);\n            else if (l2 == null)\n                l2 = new ListNode(0);\n            if(l1.val + l2.val +car >= 10)\n            {\n                curNode = new ListNode((l1.val + l2.val+car) %10); \n                car = 1;\n            }\n            else\n            {\n                curNode = new ListNode(l1.val + l2.val+car);\n                car = 0;\n            }\n            if(first)\n            {\n                firstNode = curNode;\n                first = false;\n            }\n            pastNode.next = curNode;\n            pastNode = curNode;\n            l1 = l1.next;\n            l2 = l2.next;\n        }\n        if (car == 1)\n        {\n            curNode = new ListNode(1);\n            pastNode.next = curNode;\n        }\n        return(firstNode);\n    }\n}","compare_resulttitle_slug":"add-two-numbers","has_notes":false}